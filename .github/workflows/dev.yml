# This workflow will build a MuleSoft project and deploy to CloudHub
name: TestCICD Pipeline
on:
  push:
    branches:    
      - '*'         # matches every branch that doesn't contain a '/'
      - '!main'   # excludes master
jobs:
  variables:
    runs-on: ubuntu-latest
    steps:    
    - name: Display Variables
      env:
        ANYPOINT_PASSWORD: ${{ secrets.ANYPOINT_PASSWORD }}
      run: |
        echo "INICIO"
        echo "ANYPOINT_APIVERSION"
        echo ${{secrets.ANYPOINT_APIVERSION}} | sed 's/./& /g'
        echo "ANYPOINT_ENVIRONMENT"
        echo ${{secrets.ANYPOINT_ENVIRONMENT}} | sed 's/./& /g'
        echo "ANYPOINT_USERNAME"
        echo ${{secrets.ANYPOINT_USERNAME}} | sed 's/./& /g'
        echo "ANYPOINT_PASSWORD"
        echo ${{secrets.ANYPOINT_PASSWORD}} | sed 's/./& /g'
        echo "ANYPOINT_REGION"
        echo ${{secrets.ANYPOINT_REGION}} | sed 's/./& /g'
        echo "ANYPOINT_USERNAME"
        echo ${{secrets.ANYPOINT_USERNAME}} | sed 's/./& /g'
        echo "ANYPOINT_VERSION"
        echo ${{secrets.ANYPOINT_VERSION}} | sed 's/./& /g'
        echo "ANYPOINT_WORKERS"
        echo ${{secrets.ANYPOINT_WORKERS}} | sed 's/./& /g'
        echo "ANYPOINT_WORKERTYPE"
        echo ${{secrets.ANYPOINT_WORKERTYPE}} | sed 's/./& /g'
        echo "REPO_NAME"
        echo "REPO_NAME=${{ github.event.repository.name }}"
        echo "FIN"
        
  build:
    needs: variables
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}maven${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build
      run: mvn -B package --file pom.xml
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/.$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    - uses: actions/upload-artifact@master
      with:
          name: artifacts
          path: target/*.jar
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:    
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}maven${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: actions/download-artifact@master
      with:
        name: artifacts
    - name: Deploy to CloudHub
      run: |
        echo "INICIO"
        artifactName=$(ls *.jar | head -1)
        mvn clean package deploy -DmuleDeploy -Dcloudhub.mule.version=${{ secrets.ANYPOINT_VERSION }} -Duser.name=${{ secrets.ANYPOINT_USERNAME }}-Duser.password=${{ secrets.ANYPOINT_PASSWORD }}-Dcloudhub.environment=${{ secrets.ANYPOINT_ENVIRONMENT }}-Dcloudhub.application.name=${{ github.event.repository.name }}-Dapi.version=${{ secrets.ANYPOINT_APIVERSION }}-Dcloudhub.region=${{ secrets.ANYPOINT_REGION }-Dcloudhub.workers=${{ secrets.ANYPOINT_WORKERS }} -DworkerType=${{ secrets.ANYPOINT_WORKERTYPE }}
        echo "FIN"
